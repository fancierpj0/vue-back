# EditorConfig helps maintain consistent coding styles for multiple developers working on the same project across various editors and IDEs. The EditorConfig project consists of a file format for defining coding styles and a collection of text editor plugins that enable editors to read the file format and adhere to defined styles. EditorConfig files are easily readable and they work nicely with version control systems.
# `EditorConfig`帮助开发人员在不同的编辑器和IDE之间定义和维护一致的编码样式。`EditorConfig`项目由用于定义编码样式的文件格式和一组文本编辑器插件组成,这些插件使编辑器能够读取文件格式并遵循定义的样式。`EditorConfig`文件易于阅读,并且与版本控制系统配合使用

# root = true

# 匹配全部文件
[*]

# 结尾换行符 lf cr crlf
end_of_line = lf

# 设置字符集
charset = utf-8

# 删除一行中的前后空格
trim_trailing_whitespace = true

# 在文件结尾插入新行
insert_final_newline = true

# 最多允许一行有多少个字符
max_line_length = 100

# 缩进风格 可选space、tab
# set to tab or space to use hard tabs or soft tabs respectively.
# hard-tabs是硬件tab,就是按一个tab键,soft-tabs是软件tab,通过space键实现。
indent_style = space

# 缩进的空格数(1个tab等于几个space),indent_style = space 时此选项生效
# a whole number defining the number of columns used for each indentation level and the width of soft tabs (when supported). When set to tab, the value of tab_width (if specified) will be used.
indent_size = 2

# indent_style = tab时此选项生效
# a whole number defining the number of columns used to represent a tab character. This defaults to the value of indent_size and doesn't usually need to be specified.
# tab_width = 2

# 设置为true以删除换行字符之前的任何空格字符
[*.md]
trim_trailing_whitespace = true



# Matches any single character in name
# [name]

# Matches any single character not in name
# [!name]

# Matches any single character
# ?

# Matches any string of characters, except path separators (/)
# *

# Matches any string of characters
# **

# Indentation override for all JS under lib directory
# [lib/**.js]

# [*.{js,py}]

# Matches any integer numbers between num1 and num2, where num1 and num2 can be either positive or negative
# {num1..num2}
